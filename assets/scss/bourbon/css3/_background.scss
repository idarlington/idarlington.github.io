@use "sass:list";
@use "sass:map";
@use "sass:meta";
@use "sass:string";
@use "../helpers/linear-gradient-parser";
@use "../helpers/radial-gradient-parser";

//************************************************************************//
// Background property for adding multiple backgrounds using shorthand
// notation.
//************************************************************************//

@mixin background($backgrounds...) {
  $webkit-backgrounds: ();
  $spec-backgrounds: ();

  @each $background in $backgrounds {
    $webkit-background: ();
    $spec-background: ();
    $background-type: meta.type-of($background);

    @if $background-type == string or $background-type == list {
      $background-str: if($background-type == list, list.nth($background, 1), $background);

      $url-str:       string.slice($background-str, 1, 3);
      $gradient-type: string.slice($background-str, 1, 6);

      @if $url-str == "url" {
        $webkit-background: $background;
        $spec-background:   $background;
      }

      @else if $gradient-type == "linear" {
        $gradients: linear-gradient-parser.linear-gradient-parser("#{$background}");
        $webkit-background: map.get($gradients, webkit-image);
        $spec-background:   map.get($gradients, spec-image);
      }

      @else if $gradient-type == "radial" {
        $gradients: radial-gradient-parser.radial-gradient-parser("#{$background}");
        $webkit-background: map.get($gradients, webkit-image);
        $spec-background:   map.get($gradients, spec-image);
      }

      @else {
        $webkit-background: $background;
        $spec-background:   $background;
      }
    }

    @else {
      $webkit-background: $background;
      $spec-background:   $background;
    }

    $webkit-backgrounds: list.append($webkit-backgrounds, $webkit-background, comma);
    $spec-backgrounds:   list.append($spec-backgrounds,   $spec-background,   comma);
  }

  background: $webkit-backgrounds;
  background: $spec-backgrounds;
}
