@use "sass:list";
@use "sass:string";
@function radial-gradient-parser($image) {
  $image: string.unquote($image);
  $gradients: ();
  $start: string.index($image, "(");
  $end: string.index($image, ",");
  $first-val: string.slice($image, $start + 1, $end - 1);

  $prefix: string.slice($image, 1, $start);
  $suffix: string.slice($image, $end, string.length($image));

  $is-spec-syntax: string.index($first-val, "at");

  @if $is-spec-syntax and $is-spec-syntax > 1 {
    $keyword: string.slice($first-val, 1, $is-spec-syntax - 2);
    $pos: string.slice($first-val, $is-spec-syntax + 3, string.length($first-val));
    $pos: list.append($pos, $keyword, comma);

    $gradients: (
      webkit-image: -webkit- + $prefix + $pos + $suffix,
      spec-image: $image
    );
  }

  @else if $is-spec-syntax == 1 {
    $pos: string.slice($first-val, $is-spec-syntax + 3, string.length($first-val));

    $gradients: (
      webkit-image: -webkit- + $prefix + $pos + $suffix,
      spec-image: $image
    );
  }

  @else if string.index($image, "cover") or string.index($image, "contain") {
    @warn "Radial-gradient needs to be updated to conform to latest spec.";

    $gradients: (
      webkit-image: null,
      spec-image: $image
    );
  }

  @else {
    $gradients: (
      webkit-image: -webkit- + $image,
      spec-image: $image
    );
  }

  @return $gradients;
}
