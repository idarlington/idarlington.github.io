<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Idarlington&#39;s SPACE</title>
    <description>Random thougths and TILs.</description>
    <link>http://idarlington.github.io/</link>
    <atom:link href="http://idarlington.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 14 Jul 2016 00:07:35 +0100</pubDate>
    <lastBuildDate>Thu, 14 Jul 2016 00:07:35 +0100</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Why you should learn Scala</title>
        <description>&lt;style&gt;
ul {
  list-style-type: square;
 margin-bottom: 10px;
 padding-left: 30px;
}

span {
  font-weight:normal;
}
&lt;/style&gt;

&lt;p&gt;I want to believe you must have heard or read about Scala and learnt it was a JVM language. You probably thought - just another JVM language that would die out soon. Right ?  Or maybe you haven’t heard of Scala. How so?&lt;/p&gt;

&lt;h2 id=&quot;spanhistoryspan&quot;&gt;&lt;span&gt;History&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Scala is short for scalable language, it combines both object oriented and functional programming concepts. It runs on the JVM (Java Virtual Machine). Scala was created by Martin Odersky (he worked on the Java compiler) and it’s first release was in 2003.&lt;/p&gt;

&lt;p&gt;In 2011, corporate stewardship was brought to bear – a set of people were making sure that the language was enterprise-ready at all times. Scala is used by some of the largest companies and startups LinkedIn, Twitter, Foursquare, The Guardian &amp;amp; Intel to name a few.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scala-companies.png&quot; alt=&quot;Scala Companies&quot; title=&quot;companies using scala&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have been using Scala for over a year and I believe it won’t die out. I would like to give you reasons to &lt;del&gt;ditch that other language and&lt;/del&gt; start using Scala. I would be presenting my case using powerful features in Scala known as case classes (no pun intended) and &lt;code class=&quot;highlighter-rouge&quot;&gt;pattern matching&lt;/code&gt;. Pattern matching is described as &lt;code class=&quot;highlighter-rouge&quot;&gt;switch on steroids&lt;/code&gt; on &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;Scala’s official website&lt;/a&gt;. I think comparing it with switch cases is quite an injustice to it. It has also been called &lt;code class=&quot;highlighter-rouge&quot;&gt;Swiss army knife of Scala&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;case-spanconcise-codesspan&quot;&gt;case &lt;span&gt;Concise Codes&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Unlike Java that is riddled with boiler plate codes, Scala is quite concise. Though to be fair, using Java 8 lambdas could make Java code a bit concise.&lt;/p&gt;

&lt;p&gt;Comparing codes creating a user class in Scala and Java clearly shows Scala’s concise nature.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Java Code&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSurname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Scala Code
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;When we started Spark, we wanted it to have a concise API for users, which Scala did well.&lt;/p&gt;

  &lt;p&gt;— &lt;em&gt;Matei Zaharia,CTO @ Databricks&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;case-spanfunctional--oopspan&quot;&gt;case &lt;span&gt;Functional &amp;amp; OOP&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Scala mixes the functional paradigm with pure object orientation.  In  Scala, functional programming is the recommended way to program but the creators knew making that deep dive would be tough for anyone so you can still use your OOP patterns.&lt;/p&gt;

&lt;p&gt;Functions are first class objects in Scala. Using functional programming, you will be able to write less code that is reusable and easily maintained.&lt;/p&gt;

&lt;p&gt;Solving the first Euler problem &lt;em&gt;(Find the sum of all the multiples of 3 or 5 below 1000)&lt;/em&gt; in Scala with the functional paradigm shows clean and maintainable code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;case-spanstatic-typing-and-type-inferencespan&quot;&gt;case &lt;span&gt;Static Typing and Type Inference&lt;/span&gt;&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Statically typed programming languages do type checking (the process of verifying and enforcing the constraints of types) at compile-time as opposed to run-time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Scala’s static typing is one of my favorite feature.It has been proven that static typing improves code quality. This is important for data scientists, if you have a large job that will run for hours, you don’t want to find out half way through the job that it was not a correct implementation.&lt;/p&gt;

&lt;p&gt;Scala’s static typing helps you write less tests, you don’t need to write tests to check type consistency as the compiler does that for you (Sigh of relief).  This helps you reduce the amount of stupid bugs at an early stage.&lt;/p&gt;

&lt;p&gt;Also, with Scala’s type inference you can create variables without a specified type and the type would be inferred.&lt;/p&gt;

&lt;h3 id=&quot;case--spanjava-interoperabilityspan&quot;&gt;Case  &lt;span&gt;Java Interoperability&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Scala has awesome Java interoperability which means you can import and use your Java codes and libraries in your Scala application (isn’t that awesome?). The good thing is that integration is seamless as Scala runs on the JVM, you do it without any performance penalty.&lt;/p&gt;

&lt;h3 id=&quot;case-spanconcurrency-and-distributionspan&quot;&gt;Case &lt;span&gt;Concurrency and Distribution&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Scala is suited for multi-core programming, it has built in tools for its implementation. Using Immutable values and collections is the recommended method of programming in Scala, as it guards your data from being mangled by different processes.&lt;/p&gt;

&lt;p&gt;Scala also uses &lt;strong&gt;Akka&lt;/strong&gt; which is a &lt;code class=&quot;highlighter-rouge&quot;&gt;toolkit and runtime for building highly concurrent, distributed, and fault tolerant event-driven applications&lt;/code&gt;. Scala’s functional nature makes it easier to write safe and performant multi-threaded code. There is less reliance on mutable state and Scala’s futures and actors provide powerful tools for organizing concurrent systems.&lt;/p&gt;

&lt;h3 id=&quot;case-spanhigh-paying-jobs-and-most-loved-languagespan&quot;&gt;Case &lt;span&gt;High Paying Jobs and Most loved Language&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;From the results of the recent &lt;a href=&quot;http://stackoverflow.com/research/developer-survey-2016#technology-most-loved-dreaded-and-wanted&quot;&gt;stack-overflow survey&lt;/a&gt;, Scala is amongst the top five most loved  languages.  Scala has recently seen adoption as the language for introduction to computer science in some educational institutions.&lt;/p&gt;

&lt;p&gt;It is no mistake that Spark (a data engine written in Scala) jobs and Scala jobs are the top paying tech jobs in the US and amongst the top ten paying tech jobs worldwide according to the &lt;a href=&quot;http://stackoverflow.com/research/developer-survey-2016#technology-top-paying-tech&quot;&gt;stack-overflow survey&lt;/a&gt;. I guess if none of the above cases impressed you, this should do right?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/loved-scala.png&quot; alt=&quot;Loved Scala&quot; title=&quot;scala top paying tech 2016&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;case-span-span&quot;&gt;Case &lt;span&gt;_ &lt;/span&gt;&lt;/h3&gt;

&lt;p&gt;Other features that make Scala awesome are&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Options&lt;/strong&gt; – No more NullPointerExceptions code crashes or errors.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;One class != one file&lt;/strong&gt; as you can have more than a class in a file.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scala traits&lt;/strong&gt; - multiple inheritance without some of it’s dangers but with some limitations.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scala streams&lt;/strong&gt; - an awesome scala collection that can be used for efficient Big Data pocessing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Case classes&lt;/strong&gt; and &lt;strong&gt;pattern matching&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Semicolons&lt;/strong&gt; are not &lt;strong&gt;compulsory&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what do you think? Drop your thoughts in the comments section.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Jul 2016 00:00:00 +0100</pubDate>
        <link>http://idarlington.github.io/2016/why-you-should-learn-scala/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2016/why-you-should-learn-scala/</guid>
        
        <category>Scala</category>
        
        
      </item>
    
      <item>
        <title>Monte Carlo Integration</title>
        <description>&lt;p&gt;We want to calculate:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int_a^bf(x)dx&lt;/script&gt;

&lt;p&gt;However, the function $f(x)$ may be hard to integrate. To approximate the result, we use Monte Carlo Integration. Let&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f(x) = g(x)h(x)&lt;/script&gt;

&lt;p&gt;Now the original integration becomes:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int_a^bg(x)h(x)dx&lt;/script&gt;

&lt;p&gt;If we think of $h(x)$ as a PDF (probability density function), does it look like calculating the expectation of $g(x)$?&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\mathbb{E}_{h}[g(x)] = \int_a^bg(x)h(x)dx&lt;/script&gt;

&lt;p&gt;Now let $h(x)$ to be a distribution, and we sample some values from the distribution $x_i\sim h(x)$, then the integration can be approximated with:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\hat{G} = \frac{1}{N}\sum_{i=1}^{N}g(x_i)&lt;/script&gt;

&lt;p&gt;And the $\hat{G}$ is the original integral. The reason why this method works is the law of large number. If we have enough samples, then the sample mean can approximate the true expectation.&lt;/p&gt;

&lt;p&gt;For example, if we let $x_i\sim \mathrm{unif}(a,b)$, that is $h(x) = \frac{1}{b-a}$, $g(x) = (b-a)f(x)$, we can get an approximation $\hat{G}$ with some uniform sampling of $x$.&lt;/p&gt;

&lt;!-- https://www.youtube.com/watch?v=MKnjsqYVG4Y&amp;feature=iv&amp;src_vid=TR0biDues7k&amp;annotation_id=annotation_927935 --&gt;
</description>
        <pubDate>Sat, 26 Mar 2016 00:00:00 +0100</pubDate>
        <link>http://idarlington.github.io/2016/monte-carlo-integration/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2016/monte-carlo-integration/</guid>
        
        <category>machine learning</category>
        
        <category>stat</category>
        
        
      </item>
    
      <item>
        <title>Submit Job to Cluster Using qsub</title>
        <description>&lt;p&gt;First, create a shell script file. I usually call it &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;jobname&amp;gt;.job&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;```sh
#!/bin/bash&lt;/p&gt;

&lt;h1 id=&quot;merge-stdout-and-stderr-into-one-output-file&quot;&gt;Merge stdout and stderr into one output file&lt;/h1&gt;
&lt;p&gt;#PBS -j oe&lt;/p&gt;

&lt;h1 id=&quot;notify-via-email-when-the-job-startserrorends&quot;&gt;Notify via email when the job starts/error/ends&lt;/h1&gt;
&lt;p&gt;#PBS -m abe
#PBS -M email@example.com&lt;/p&gt;

&lt;h1 id=&quot;requested-cpu-time&quot;&gt;Requested CPU time&lt;/h1&gt;
&lt;p&gt;#PBS -l walltime=100:00:00&lt;/p&gt;

&lt;h1 id=&quot;requested--nodes&quot;&gt;Requested # Nodes&lt;/h1&gt;
&lt;p&gt;#PBS -l nodes=2&lt;/p&gt;

&lt;h1 id=&quot;run-code-like-in-local-machine&quot;&gt;Run code like in local machine&lt;/h1&gt;
&lt;p&gt;cd /home/user/private
module load matlab-8.6
matlab -nosplash -nodisplay &amp;lt; model.m
```&lt;/p&gt;

&lt;p&gt;Then run &lt;code class=&quot;highlighter-rouge&quot;&gt;qsub &amp;lt;jobname&amp;gt;.job&lt;/code&gt; to submit the job to the cluster.&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Mar 2016 00:00:00 +0100</pubDate>
        <link>http://idarlington.github.io/2016/submit-job-to-cluster-using-qsub/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2016/submit-job-to-cluster-using-qsub/</guid>
        
        <category>cluster</category>
        
        
      </item>
    
      <item>
        <title>Run Matlab from CLI</title>
        <description>&lt;p&gt;There are many ways to do this&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sh
matlab -nosplash -nodisplay -r source_code
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here, the &lt;code class=&quot;highlighter-rouge&quot;&gt;source_code&lt;/code&gt; this the filename of the source file. Don’t include the suffix &lt;code class=&quot;highlighter-rouge&quot;&gt;.m&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sh
matlab -nosplash -nodisplay &amp;lt; source_code.m &amp;gt; output.log
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Some people suggest:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sh
matlab -nosplash -nodisplay -r &quot;run(&#39;source_code.m&#39;)&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This method leads to error in some parallel case. Don’t use it.&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Mar 2016 00:00:00 +0100</pubDate>
        <link>http://idarlington.github.io/2016/run-matlab-from-cli/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2016/run-matlab-from-cli/</guid>
        
        <category>matlab</category>
        
        <category>cluster</category>
        
        
      </item>
    
      <item>
        <title>Correlation and R-Squared</title>
        <description>&lt;h2 id=&quot;r-squared&quot;&gt;R-Squared&lt;/h2&gt;

&lt;p&gt;$R^2$ (&lt;a href=&quot;https://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;coefficient of determination&lt;/a&gt;) indicates how well data fit a statistical model. It is defined as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;R^2=1-\frac{\sum_{i=1}^{n}\left(y_i-f_i\right)^2}{\sum_{i=1}^{n}\left(y_i-\bar{y}\right)^2}&lt;/script&gt;

&lt;p&gt;where $f_i$ is the predicted value, $\bar{y}$ is the mean value of data. The result is between 0 and 1. 1 is perfectly good, 0 is horribly bad.&lt;/p&gt;

&lt;h2 id=&quot;pearson-correlation&quot;&gt;Pearson Correlation&lt;/h2&gt;

&lt;p&gt;Pearson correlation coefficient is a measure of linear correlation between two variables. It is defined as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{X,Y}=\frac{\mathrm{cov}(X,Y)}{\sigma_X\sigma_Y}&lt;/script&gt;

&lt;h2 id=&quot;r-squared-and-squared-correlation&quot;&gt;R-Squared and Squared Correlation&lt;/h2&gt;

&lt;p&gt;In optimal models, $R^2$ is the square of the correlation between the true and predicted outcomes. That is:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;R^2=\rho=\frac{\frac{1}{n}\sum_{i=1}^{n}\left(f_i-\bar{f}\right)\left(y_i-\bar{y}\right)}{\sqrt{\left(\frac{1}{n}\sum_{i=1}^{n}\left(f_i-\bar{f}\right)^2\right)\left(\frac{1}{n}\sum_{i=1}^{n}\left(y_i-\bar{y}\right)^2\right)}}&lt;/script&gt;

&lt;p&gt;Detailed derivation: &lt;a href=&quot;http://www.win-vector.com/blog/2011/11/correlation-and-r-squared/&quot;&gt;http://www.win-vector.com/blog/2011/11/correlation-and-r-squared/&lt;/a&gt; (&lt;a href=&quot;https://getpocket.com/a/read/300167730&quot;&gt;Pocket Mirror&lt;/a&gt;).&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Mar 2016 00:00:00 +0100</pubDate>
        <link>http://idarlington.github.io/2016/correlation-and-r-squared/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2016/correlation-and-r-squared/</guid>
        
        <category>stat</category>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 10 Dec 2015 01:05:33 +0100</pubDate>
        <link>http://idarlington.github.io/2015/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2015/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Lorem ipsum dolor sit</title>
        <description>&lt;h1&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Pellentesque habitant morbi tristique&lt;/strong&gt; senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. &lt;em&gt;Aenean ultricies mi vitae est.&lt;/em&gt; Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, &lt;code&gt;commodo vitae&lt;/code&gt;, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. &lt;a href=&quot;#&quot;&gt;Donec non enim&lt;/a&gt; in turpis pulvinar facilisis. Ut felis.&lt;/p&gt;

&lt;h2&gt;Header Level 2&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;
  &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus magna. Cras in mi at felis aliquet congue. Ut a est eget ligula molestie gravida. Curabitur massa. Donec eleifend, libero at sagittis mollis, tellus est malesuada tellus, at luctus turpis elit sit amet quam. Vivamus pretium ornare est.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Header Level 3&lt;/h3&gt;

&lt;h4&gt;Header Level 4&lt;/h4&gt;
&lt;h5&gt;Header Level 5&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;
  &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Thu, 26 Nov 2015 14:46:52 +0100</pubDate>
        <link>http://idarlington.github.io/2015/lorem-ipsum-dolor-sit/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2015/lorem-ipsum-dolor-sit/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Lorem ipsum dolor sit amet</title>
        <description>&lt;p&gt;&lt;strong&gt;Pellentesque habitant morbi tristique&lt;/strong&gt; senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. &lt;em&gt;Aenean ultricies mi vitae est.&lt;/em&gt; Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, &lt;code&gt;commodo vitae&lt;/code&gt;, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt condimentum, eros ipsum rutrum orci, sagittis tempus lacus enim ac dui. &lt;a href=&quot;#&quot;&gt;Donec non enim&lt;/a&gt; in turpis pulvinar facilisis. Ut felis.&lt;/p&gt;

&lt;h2&gt;Header Level 2&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;
  &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus magna. Cras in mi at felis aliquet congue. Ut a est eget ligula molestie gravida. Curabitur massa. Donec eleifend, libero at sagittis mollis, tellus est malesuada tellus, at luctus turpis elit sit amet quam. Vivamus pretium ornare est.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;Header Level 3&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/li&gt;
  &lt;li&gt;Aliquam tincidunt mauris eu risus.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Header Level 4&lt;/h4&gt;

&lt;h5&gt;Header Level 5&lt;/h5&gt;

&lt;h6&gt;Header Level 6&lt;/h6&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Thu, 12 Nov 2015 20:19:43 +0100</pubDate>
        <link>http://idarlington.github.io/2015/lorem/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2015/lorem/</guid>
        
        
        <category>welcome</category>
        
      </item>
    
      <item>
        <title>The quick, brown fox jumps over a lazy dog</title>
        <description>&lt;p&gt;The quick, brown fox jumps over a lazy dog. DJs flock by when MTV ax quiz prog. Junk MTV quiz graced by fox whelps. Bawds jog, flick quartz, vex nymphs. Waltz, bad nymph, for quick jigs vex! Fox nymphs grab quick-jived waltz.&lt;/p&gt;

&lt;p&gt;Brick quiz whangs jumpy veldt fox. Bright vixens jump; dozy fowl quack. Quick wafting zephyrs vex bold Jim. Quick zephyrs blow, vexing daft Jim. Sex-charged fop blew my junk TV quiz. How quickly daft jumping zebras vex.&lt;/p&gt;

&lt;p&gt;Two driven jocks help fax my big quiz. Quick, Baz, get my woven flax jodhpurs! “Now fax quiz Jack! “ my brave ghost pled. Five quacking zephyrs jolt my wax bed. Flummoxed by job, kvetching W. zaps Iraq. Cozy sphinx waves quart jug of bad milk.&lt;/p&gt;

&lt;p&gt;A very bad quack might jinx zippy fowls. Few quips galvanized the mock jury box. Quick brown dogs jump over the lazy fox. The jay, pig, fox, zebra, and my wolves quack! Blowzy red vixens fight for a quick jump.&lt;/p&gt;

&lt;p&gt;Joaquin Phoenix was gazed by MTV for luck. A wizard’s job is to vex chumps quickly in fog. Watch “Jeopardy! “, Alex Trebek’s fun TV quiz game. Woven silk pyjamas exchanged for blue quartz. Brawny gods just flocked up to quiz and vex him.&lt;/p&gt;

&lt;p&gt;Adjusting quiver and bow, Zompyc[1] killed the fox. My faxed joke won a pager in the cable TV quiz show. Amazingly few discotheques provide jukeboxes. My girl wove six dozen plaid jackets before she quit. Six big devils from Japan quickly forgot how to waltz.&lt;/p&gt;

&lt;p&gt;Big July earthquakes confound zany experimental vow. Foxy parsons quiz and cajole the lovably dim wiki-girl. Have a pick: twenty six letters - no forcing a jumbled quiz! Crazy Fredericka bought many very exquisite opal jewels.&lt;/p&gt;

&lt;p&gt;Sixty zippers were quickly picked from the woven jute bag. A quick movement of the enemy will jeopardize six gunboats. All questions asked by five watch experts amazed the judge. Jack quietly moved up front and seized the big ball of wax.&lt;/p&gt;

&lt;p&gt;The quick, brown fox jumps over a lazy dog. DJs flock by when MTV ax quiz prog. Junk MTV quiz graced by fox whelps. Bawds jog, flick quartz, vex nymphs. Waltz, bad nymph, for quick jigs vex! Fox nymphs grab quick-jived waltz. Brick quiz whangs jumpy veldt fox.&lt;/p&gt;

&lt;p&gt;Bright vixens jump; dozy fowl quack. Quick wafting zephyrs vex bold Jim. Quick zephyrs blow, vexing daft Jim. Sex-charged fop blew my junk TV quiz. How quickly daft jumping zebras vex. Two driven jocks help fax my big quiz. Quick, Baz, get my woven flax jodhpurs!&lt;/p&gt;

&lt;p&gt;“Now fax quiz Jack! “ my brave ghost pled. Five quacking zephyrs jolt my wax bed. Flummoxed by job, kvetching W. zaps Iraq. Cozy sphinx waves quart jug of bad milk. A very bad quack might jinx zippy fowls. Few quips galvanized the mock jury box. Quick brown dogs jump over the lazy fox. The jay, pig, fox, zebra, and my wolves quack! Blowzy red vixens fight for a quick jump. Joaquin Phoenix was gazed by MTV&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Nov 2015 17:42:24 +0100</pubDate>
        <link>http://idarlington.github.io/2015/the-quick-brown-fox-jumps-over-a-lazy-dog/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2015/the-quick-brown-fox-jumps-over-a-lazy-dog/</guid>
        
        <category>welcome</category>
        
        
        <category>welcome</category>
        
      </item>
    
      <item>
        <title>Lorem ipsum dolor sit amet, consectetuer adipiscing elit</title>
        <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem.&lt;/p&gt;

&lt;p&gt;Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi.&lt;/p&gt;

&lt;p&gt;Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue.&lt;/p&gt;

&lt;p&gt;Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus.&lt;/p&gt;

&lt;p&gt;Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero.&lt;/p&gt;

&lt;p&gt;Fusce vulputate eleifend sapien. Vestibulum purus quam, scelerisque ut, mollis sed, nonummy id, metus. Nullam accumsan lorem in dui. Cras ultricies mi eu turpis hendrerit fringilla. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; In ac dui quis mi consectetuer lacinia.&lt;/p&gt;

&lt;p&gt;Nam pretium turpis et arcu. Duis arcu tortor, suscipit eget, imperdiet nec, imperdiet iaculis, ipsum. Sed aliquam ultrices mauris. Integer ante arcu, accumsan a, consectetuer eget, posuere ut, mauris. Praesent adipiscing. Phasellus ullamcorper ipsum rutrum nunc. Nunc nonummy metus.&lt;/p&gt;

&lt;p&gt;Vestibulum volutpat pretium libero. Cras id dui. Aenean ut eros et nisl sagittis vestibulum. Nullam nulla eros, ultricies sit amet, nonummy id, imperdiet feugiat, pede. Sed lectus. Donec mollis hendrerit risus. Phasellus nec sem in justo pellentesque facilisis. Etiam imperdiet imperdiet orci.&lt;/p&gt;

&lt;p&gt;Nunc nec neque. Phasellus leo dolor, tempus non, auctor et, hendrerit quis, nisi. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Maecenas malesuada. Praesent congue erat at massa. Sed cursus turpis vitae tortor. Donec posuere vulputate arcu. Phasellus accumsan cursus velit. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Sed aliquam, nisi quis porttitor congue, elit erat euismod orci.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Nov 2015 17:41:50 +0100</pubDate>
        <link>http://idarlington.github.io/2015/lorem-ipsum-dolor-sit-amet-consectetuer-adipiscing-elit/</link>
        <guid isPermaLink="true">http://idarlington.github.io/2015/lorem-ipsum-dolor-sit-amet-consectetuer-adipiscing-elit/</guid>
        
        <category>welcome</category>
        
        
        <category>welcome</category>
        
      </item>
    
  </channel>
</rss>
